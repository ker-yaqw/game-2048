/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/helpers/check-device.js":
/*!****************************************!*\
  !*** ./src/js/helpers/check-device.js ***!
  \****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getDeviceType: () => (/* binding */ getDeviceType)\n/* harmony export */ });\nconst getDeviceType = () => {\n    const userAgent = navigator.userAgent;\n\n    if (/Mobi/.test(userAgent)) {\n        document.documentElement.classList.add('page--mobile');\n        console.log(\"Mobile device\");\n\n        return \"Mobile device\";\n    } else {\n        document.documentElement.classList.add('page--desctop');\n        console.log(\"Desktop\");\n\n        return \"Desktop\";\n    }\n};\n\n//# sourceURL=webpack://my-gulp/./src/js/helpers/check-device.js?");

/***/ }),

/***/ "./src/js/helpers/document-ready.js":
/*!******************************************!*\
  !*** ./src/js/helpers/document-ready.js ***!
  \******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ready: () => (/* binding */ ready)\n/* harmony export */ });\nconst ready = function (fn) {\n    if (document.readyState === \"complete\" ||\n        document.readyState !== \"loading\" &&\n        !document.attachEvent){\n        fn();\n    } else {\n        document.addEventListener('DOMContentLoaded', fn);\n    }\n};\n\n\n//# sourceURL=webpack://my-gulp/./src/js/helpers/document-ready.js?");

/***/ }),

/***/ "./src/js/script.js":
/*!**************************!*\
  !*** ./src/js/script.js ***!
  \**************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _helpers_document_ready_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers/document-ready.js */ \"./src/js/helpers/document-ready.js\");\n/* harmony import */ var _helpers_check_device_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./helpers/check-device.js */ \"./src/js/helpers/check-device.js\");\n\n\n\n\n\n// couter\nfunction getCookie(byname) {byname=byname+\"=\";\n    nlen = byname.length;\n    fromN = document.cookie.indexOf(byname)+0;\n if((fromN) != -1)\n     {fromN +=nlen\n      toN=document.cookie.indexOf(\";\",fromN)+0;\n      if(toN == -1) {toN=document.cookie.length;}\n      return unescape(document.cookie.substring(fromN,toN));\n     }\n return null;\n}\n\nfunction parseCookie()   // Разделение cookie\n{ var cookieList = document.cookie.split(\"; \");\n// Массив для каждого cookie в cookieList\nvar cookieArray = new Array();\nfor (var i = 0; i < cookieList.length; i++) {\n    // Разделение пар имя-значение.\n    var name = cookieList[i].split(\"=\");\n    // Декодирование и добавление в cookie-массив.\n    cookieArray[unescape(name[0])] = unescape(name[1]);\n }\nreturn cookieArray;\n}\n    function setCookie(visits) {\n        \n    var expireDate = new Date();\n    var today = new Date();\n    // Установка даты истечения срока хранения.\n    expireDate.setDate(365 + expireDate.getDate());\n    // Сохранение числа посещений.\n    document.cookie = \"visits=\" + visits +\n                    \"; expires=\" + expireDate.toGMTString() + \";\";\n    // Сохранение настоящей даты как времени последнего посещения.\n    document.cookie = \"LastVisit=\" + escape(today.toGMTString()) +\n                        \"; expires=\" + expireDate.toGMTString() + \";\";\n    }\n\n if (\"\" == document.cookie)\n { \n  setCookie(1);\n  console.log(\"Поздравляю Вас с первым посещением моего сайта!\");\n }\n else {\n    const button = document.querySelector('.game-played');\n    var cookies = parseCookie();\n    // Вывод приветствия, числа посещений и увеличение числа посещений на 1.\n    button.innerHTML = cookies.visits++;\n    // Обновление cookie.\n    setCookie(isNaN(cookies.visits)?1:cookies.visits);\n }    \n\n\n(0,_helpers_document_ready_js__WEBPACK_IMPORTED_MODULE_0__.ready)(function() {\n    console.log('DOM героически построен!');\n    (0,_helpers_check_device_js__WEBPACK_IMPORTED_MODULE_1__.getDeviceType)();\n    Function.prototype.bind = Function.prototype.bind || function(a) {\n      var b = this;\n      return function(c) {\n          c instanceof Array || (c = [c]);\n          b.apply(a, c)\n      }\n  }\n  ;\n  (function() {\n      function a(a) {\n          this.el = a;\n          a = a.className.replace(/^\\s+|\\s+$/g, \"\").split(/\\s+/);\n          for (var b = 0; b < a.length; b++)\n              d.call(this, a[b])\n      }\n      function b(a, b, c) {\n          Object.defineProperty ? Object.defineProperty(a, b, {\n              get: c\n          }) : a.__defineGetter__(b, c)\n      }\n      if (!(\"undefined\" === typeof window.Element || \"classList\"in document.documentElement)) {\n          var c = Array.prototype\n            , d = c.push\n            , e = c.splice\n            , f = c.join;\n          a.prototype = {\n              add: function(a) {\n                  this.contains(a) || (d.call(this, a),\n                  this.el.className = this.toString())\n              },\n              contains: function(a) {\n                  return -1 != this.el.className.indexOf(a)\n              },\n              item: function(a) {\n                  return this[a] || null\n              },\n              remove: function(a) {\n                  if (this.contains(a)) {\n                      for (var b = 0; b < this.length && this[b] != a; b++)\n                          ;\n                      e.call(this, b, 1);\n                      this.el.className = this.toString()\n                  }\n              },\n              toString: function() {\n                  return f.call(this, \" \")\n              },\n              toggle: function(a) {\n                  this.contains(a) ? this.remove(a) : this.add(a);\n                  return this.contains(a)\n              }\n          };\n          window.DOMTokenList = a;\n          b(HTMLElement.prototype, \"classList\", function() {\n              return new a(this)\n          })\n      }\n  })();\n  (function() {\n      for (var a = 0, b = [\"webkit\", \"moz\"], c = 0; c < b.length && !window.requestAnimationFrame; ++c)\n          window.requestAnimationFrame = window[b[c] + \"RequestAnimationFrame\"],\n          window.cancelAnimationFrame = window[b[c] + \"CancelAnimationFrame\"] || window[b[c] + \"CancelRequestAnimationFrame\"];\n      window.requestAnimationFrame || (window.requestAnimationFrame = function(b, c) {\n          var f = (new Date).getTime()\n            , h = Math.max(0, 16 - (f - a))\n            , g = window.setTimeout(function() {\n              b(f + h)\n          }, h);\n          a = f + h;\n          return g\n      }\n      );\n      window.cancelAnimationFrame || (window.cancelAnimationFrame = function(a) {\n          clearTimeout(a)\n      }\n      )\n  })();\n  function KeyboardInputManager() {\n      this.events = {};\n      window.navigator.msPointerEnabled ? (this.eventTouchstart = \"MSPointerDown\",\n      this.eventTouchmove = \"MSPointerMove\",\n      this.eventTouchend = \"MSPointerUp\") : (this.eventTouchstart = \"touchstart\",\n      this.eventTouchmove = \"touchmove\",\n      this.eventTouchend = \"touchend\");\n      this.listen()\n  }\n  KeyboardInputManager.prototype.on = function(a, b) {\n      this.events[a] || (this.events[a] = []);\n      this.events[a].push(b)\n  }\n  ;\n  KeyboardInputManager.prototype.emit = function(a, b) {\n      var c = this.events[a];\n      c && c.forEach(function(a) {\n          a(b)\n      })\n  }\n  ;\n  KeyboardInputManager.prototype.listen = function() {\n      var a = this\n        , b = {\n          38: 0,\n          39: 1,\n          40: 2,\n          37: 3,\n          75: 0,\n          76: 1,\n          74: 2,\n          72: 3,\n          87: 0,\n          68: 1,\n          83: 2,\n          65: 3\n      };\n      document.addEventListener(\"keydown\", function(c) {\n          var d = c.altKey || c.ctrlKey || c.metaKey || c.shiftKey\n            , e = b[c.which];\n          d || void 0 === e || (c.preventDefault(),\n          a.emit(\"move\", e));\n          d || 82 !== c.which || a.restart.call(a, c)\n      });\n      this.bindButtonPress(\".retry-button\", this.restart);\n      this.bindButtonPress(\".restart-button\", this.restart);\n      this.bindButtonPress(\".keep-playing-button\", this.keepPlaying);\n      var c, d, e = document.getElementsByClassName(\"game-container\")[0];\n      e.addEventListener(this.eventTouchstart, function(a) {\n          !window.navigator.msPointerEnabled && 1 < a.touches.length || 1 < a.targetTouches || (window.navigator.msPointerEnabled ? (c = a.pageX,\n          d = a.pageY) : (c = a.touches[0].clientX,\n          d = a.touches[0].clientY),\n          a.preventDefault())\n      });\n      e.addEventListener(this.eventTouchmove, function(a) {\n          a.preventDefault()\n      });\n      e.addEventListener(this.eventTouchend, function(b) {\n          if (!(!window.navigator.msPointerEnabled && 0 < b.touches.length || 0 < b.targetTouches)) {\n              var e, g;\n              window.navigator.msPointerEnabled ? (e = b.pageX,\n              g = b.pageY) : (e = b.changedTouches[0].clientX,\n              g = b.changedTouches[0].clientY);\n              e -= c;\n              b = Math.abs(e);\n              g -= d;\n              var m = Math.abs(g);\n              10 < Math.max(b, m) && a.emit(\"move\", b > m ? 0 < e ? 1 : 3 : 0 < g ? 2 : 0)\n          }\n      })\n  }\n  ;\n  KeyboardInputManager.prototype.restart = function(a) {\n      a.preventDefault();\n      this.emit(\"restart\")\n  }\n  ;\n  KeyboardInputManager.prototype.keepPlaying = function(a) {\n      a.preventDefault();\n      this.emit(\"keepPlaying\")\n  }\n  ;\n  KeyboardInputManager.prototype.bindButtonPress = function(a, b) {\n      var c = document.querySelector(a);\n      c.addEventListener(\"click\", b.bind(this));\n      c.addEventListener(this.eventTouchend, b.bind(this))\n  }\n  ;\n  function HTMLActuator() {\n      this.tileContainer = document.querySelector(\".tile-container\");\n      this.scoreContainer = document.querySelector(\".score-container\");\n      this.bestContainer = document.querySelector(\".best-container\");\n      this.messageContainer = document.querySelector(\".game-message\");\n      this.sharingContainer = document.querySelector(\".score-sharing\");\n      this.score = 0\n  }\n  HTMLActuator.prototype.actuate = function(a, b) {\n      var c = this;\n      window.requestAnimationFrame(function() {\n          c.clearContainer(c.tileContainer);\n          a.cells.forEach(function(a) {\n              a.forEach(function(a) {\n                  a && c.addTile(a)\n              })\n          });\n          c.updateScore(b.score);\n          c.updateBestScore(b.bestScore);\n          b.terminated && (b.over ? c.message(!1) : b.won && c.message(!0))\n      })\n  }\n  ;\n  HTMLActuator.prototype.continueGame = function() {\n      this.clearMessage()\n  }\n  ;\n  HTMLActuator.prototype.clearContainer = function(a) {\n      for (; a.firstChild; )\n          a.removeChild(a.firstChild)\n  }\n  ;\n  HTMLActuator.prototype.addTile = function(a) {\n      var b = this\n        , c = document.createElement(\"div\")\n        , d = document.createElement(\"div\")\n        , e = this.positionClass(a.previousPosition || {\n          x: a.x,\n          y: a.y\n      })\n        , f = [\"tile\", \"tile-\" + a.value, e];\n      2048 < a.value && f.push(\"tile-super\");\n      this.applyClasses(c, f);\n      d.classList.add(\"tile-inner\");\n      d.textContent = a.value;\n      a.previousPosition ? window.requestAnimationFrame(function() {\n          f[2] = b.positionClass({\n              x: a.x,\n              y: a.y\n          });\n          b.applyClasses(c, f)\n      }) : a.mergedFrom ? (f.push(\"tile-merged\"),\n      this.applyClasses(c, f),\n      a.mergedFrom.forEach(function(a) {\n          b.addTile(a)\n      })) : (f.push(\"tile-new\"),\n      this.applyClasses(c, f));\n      c.appendChild(d);\n      this.tileContainer.appendChild(c)\n  }\n  ;\n  HTMLActuator.prototype.applyClasses = function(a, b) {\n      a.setAttribute(\"class\", b.join(\" \"))\n  }\n  ;\n  HTMLActuator.prototype.normalizePosition = function(a) {\n      return {\n          x: a.x + 1,\n          y: a.y + 1\n      }\n  }\n  ;\n  HTMLActuator.prototype.positionClass = function(a) {\n      a = this.normalizePosition(a);\n      return \"tile-position-\" + a.x + \"-\" + a.y\n  }\n  ;\n  HTMLActuator.prototype.updateScore = function(a) {\n      this.clearContainer(this.scoreContainer);\n      var b = a - this.score;\n      this.score = a;\n      this.scoreContainer.textContent = this.score;\n      0 < b && (a = document.createElement(\"div\"),\n      a.classList.add(\"score-addition\"),\n      a.textContent = \"+\" + b,\n      this.scoreContainer.appendChild(a))\n  }\n  ;\n  HTMLActuator.prototype.updateBestScore = function(a) {\n      this.bestContainer.textContent = a\n  }\n  ;\n  HTMLActuator.prototype.message = function(a) {\n      var b = a ? \"Победа!\" : \"Конец игры!\";\n      this.messageContainer.classList.add(a ? \"game-won\" : \"game-over\");\n      this.messageContainer.getElementsByTagName(\"p\")[0].textContent = b;\n      this.clearContainer(this.sharingContainer);\n      this.sharingContainer.appendChild(this.scoreTweetButton());\n      twttr.widgets.load()\n  }\n  ;\n  HTMLActuator.prototype.clearMessage = function() {\n      this.messageContainer.classList.remove(\"game-won\");\n      this.messageContainer.classList.remove(\"game-over\")\n  }\n  ;\n  HTMLActuator.prototype.scoreTweetButton = function() {\n      var a = document.createElement(\"a\");\n      a.classList.add(\"twitter-share-button\");\n      a.setAttribute(\"href\", \"https://twitter.com/share\");\n      a.setAttribute(\"data-url\", \"http://2048game.com\");\n      a.setAttribute(\"data-counturl\", \"http://2048game.com\");\n      a.textContent = \"Tweet\";\n      a.setAttribute(\"data-text\", \"I scored \" + this.score + \" points at 2048, a game where you join numbers to score high! #2048game\");\n      return a\n  }\n  ;\n  function Grid(a, b) {\n      this.size = a;\n      this.cells = b ? this.fromState(b) : this.empty()\n  }\n  Grid.prototype.empty = function() {\n      for (var a = [], b = 0; b < this.size; b++)\n          for (var c = a[b] = [], d = 0; d < this.size; d++)\n              c.push(null);\n      return a\n  }\n  ;\n  Grid.prototype.fromState = function(a) {\n      for (var b = [], c = 0; c < this.size; c++)\n          for (var d = b[c] = [], e = 0; e < this.size; e++) {\n              var f = a[c][e];\n              d.push(f ? new Tile(f.position,f.value) : null)\n          }\n      return b\n  }\n  ;\n  Grid.prototype.randomAvailableCell = function() {\n      var a = this.availableCells();\n      if (a.length)\n          return a[Math.floor(Math.random() * a.length)]\n  }\n  ;\n  Grid.prototype.availableCells = function() {\n      var a = [];\n      this.eachCell(function(b, c, d) {\n          d || a.push({\n              x: b,\n              y: c\n          })\n      });\n      return a\n  }\n  ;\n  Grid.prototype.eachCell = function(a) {\n      for (var b = 0; b < this.size; b++)\n          for (var c = 0; c < this.size; c++)\n              a(b, c, this.cells[b][c])\n  }\n  ;\n  Grid.prototype.cellsAvailable = function() {\n      return !!this.availableCells().length\n  }\n  ;\n  Grid.prototype.cellAvailable = function(a) {\n      return !this.cellOccupied(a)\n  }\n  ;\n  Grid.prototype.cellOccupied = function(a) {\n      return !!this.cellContent(a)\n  }\n  ;\n  Grid.prototype.cellContent = function(a) {\n      return this.withinBounds(a) ? this.cells[a.x][a.y] : null\n  }\n  ;\n  Grid.prototype.insertTile = function(a) {\n      this.cells[a.x][a.y] = a\n  }\n  ;\n  Grid.prototype.removeTile = function(a) {\n      this.cells[a.x][a.y] = null\n  }\n  ;\n  Grid.prototype.withinBounds = function(a) {\n      return 0 <= a.x && a.x < this.size && 0 <= a.y && a.y < this.size\n  }\n  ;\n  Grid.prototype.serialize = function() {\n      for (var a = [], b = 0; b < this.size; b++)\n          for (var c = a[b] = [], d = 0; d < this.size; d++)\n              c.push(this.cells[b][d] ? this.cells[b][d].serialize() : null);\n      return {\n          size: this.size,\n          cells: a\n      }\n  }\n  ;\n  function Tile(a, b) {\n      this.x = a.x;\n      this.y = a.y;\n      this.value = b || 2;\n      this.mergedFrom = this.previousPosition = null\n  }\n  Tile.prototype.savePosition = function() {\n      this.previousPosition = {\n          x: this.x,\n          y: this.y\n      }\n  }\n  ;\n  Tile.prototype.updatePosition = function(a) {\n      this.x = a.x;\n      this.y = a.y\n  }\n  ;\n  Tile.prototype.serialize = function() {\n      return {\n          position: {\n              x: this.x,\n              y: this.y\n          },\n          value: this.value\n      }\n  }\n  ;\n  window.fakeStorage = {\n      _data: {},\n      setItem: function(a, b) {\n          return this._data[a] = String(b)\n      },\n      getItem: function(a) {\n          return this._data.hasOwnProperty(a) ? this._data[a] : void 0\n      },\n      removeItem: function(a) {\n          return delete this._data[a]\n      },\n      clear: function() {\n          return this._data = {}\n      }\n  };\n  function LocalStorageManager() {\n      this.bestScoreKey = \"bestScore\";\n      this.gameStateKey = \"gameState\";\n      this.gameCounterKey = \"gameCounter\";\n      this.storage = this.localStorageSupported() ? window.localStorage : window.fakeStorage\n  }\n  LocalStorageManager.prototype.localStorageSupported = function() {\n      var a = window.localStorage;\n      try {\n          return a.setItem(\"test\", \"1\"),\n          a.removeItem(\"test\"),\n          !0\n      } catch (b) {\n          return !1\n      }\n  }\n  ;\n  LocalStorageManager.prototype.getBestScore = function() {\n     return this.storage.getItem(this.bestScoreKey) || 0\n  }\n  ;\n  LocalStorageManager.prototype.setBestScore = function(a) {\n      this.storage.setItem(this.bestScoreKey, a)\n  }\n  ;\n  LocalStorageManager.prototype.getGameState = function() {\n      var a = this.storage.getItem(this.gameStateKey);\n      return a ? JSON.parse(a) : null\n  }\n  ;\n  LocalStorageManager.prototype.setGameState = function(a) {\n      this.storage.setItem(this.gameStateKey, JSON.stringify(a))\n  }\n  ;\n  LocalStorageManager.prototype.clearGameState = function() {\n      this.storage.removeItem(this.gameStateKey)\n  }\n  ;\n  function GameManager(a, b, c, d) {\n      this.size = a;\n      this.inputManager = new b;\n      this.storageManager = new d;\n      this.actuator = new c;\n      this.startTiles = 2;\n      this.inputManager.on(\"move\", this.move.bind(this));\n      this.inputManager.on(\"restart\", this.restart.bind(this));\n      this.inputManager.on(\"keepPlaying\", this.keepPlaying.bind(this));\n      this.setup()\n  }\n  GameManager.prototype.restart = function() {\n      this.storageManager.clearGameState();\n      this.actuator.continueGame();\n      this.setup()\n  }\n  ;\n  GameManager.prototype.keepPlaying = function() {\n      this.keepPlaying = !0;\n      this.actuator.continueGame()\n  }\n  ;\n  GameManager.prototype.isGameTerminated = function() {\n      return this.over || this.won && !this.keepPlaying ? !0 : !1\n  }\n  ;\n  GameManager.prototype.setup = function() {\n      var a = this.storageManager.getGameState();\n      a ? (this.grid = new Grid(a.grid.size,a.grid.cells),\n      this.score = a.score,\n      this.over = a.over,\n      this.won = a.won,\n      this.keepPlaying = a.keepPlaying) : (this.grid = new Grid(this.size),\n      this.score = 0,\n      this.keepPlaying = this.won = this.over = !1,\n      this.addStartTiles());\n      this.actuate()\n  }\n  ;\n  GameManager.prototype.addStartTiles = function() {\n      for (var a = 0; a < this.startTiles; a++)\n          this.addRandomTile()\n  }\n  ;\n  GameManager.prototype.addRandomTile = function() {\n      if (this.grid.cellsAvailable()) {\n          var a = 0.9 > Math.random() ? 2 : 4\n            , a = new Tile(this.grid.randomAvailableCell(),a);\n          this.grid.insertTile(a)\n      }\n  }\n  ;\n  GameManager.prototype.actuate = function() {\n      this.storageManager.getBestScore() < this.score && this.storageManager.setBestScore(this.score);\n      this.over ? this.storageManager.clearGameState() : this.storageManager.setGameState(this.serialize());\n      this.actuator.actuate(this.grid, {\n          score: this.score,\n          over: this.over,\n          won: this.won,\n          bestScore: this.storageManager.getBestScore(),\n          terminated: this.isGameTerminated()\n      })\n  }\n  ;\n  GameManager.prototype.serialize = function() {\n      return {\n          grid: this.grid.serialize(),\n          score: this.score,\n          over: this.over,\n          won: this.won,\n          keepPlaying: this.keepPlaying\n      }\n  }\n  ;\n  GameManager.prototype.prepareTiles = function() {\n      this.grid.eachCell(function(a, b, c) {\n          c && (c.mergedFrom = null,\n          c.savePosition())\n      })\n  }\n  ;\n  GameManager.prototype.moveTile = function(a, b) {\n      this.grid.cells[a.x][a.y] = null;\n      this.grid.cells[b.x][b.y] = a;\n      a.updatePosition(b)\n  }\n  ;\n  GameManager.prototype.move = function(a) {\n      var b = this;\n      if (!this.isGameTerminated()) {\n          var c, d, e = this.getVector(a), f = this.buildTraversals(e), h = !1;\n          this.prepareTiles();\n          f.x.forEach(function(a) {\n              f.y.forEach(function(f) {\n                  c = {\n                      x: a,\n                      y: f\n                  };\n                  if (d = b.grid.cellContent(c)) {\n                      f = b.findFarthestPosition(c, e);\n                      var k = b.grid.cellContent(f.next);\n                      if (k && k.value === d.value && !k.mergedFrom) {\n                          var l = new Tile(f.next,2 * d.value);\n                          l.mergedFrom = [d, k];\n                          b.grid.insertTile(l);\n                          b.grid.removeTile(d);\n                          d.updatePosition(f.next);\n                          b.score += l.value;\n                          2048 === l.value && (b.won = !0)\n                      } else\n                          b.moveTile(d, f.farthest);\n                      b.positionsEqual(c, d) || (h = !0)\n                  }\n              })\n          });\n          h && (this.addRandomTile(),\n          this.movesAvailable() || (this.over = !0),\n          this.actuate())\n      }\n  }\n  ;\n  GameManager.prototype.getVector = function(a) {\n      return {\n          0: {\n              x: 0,\n              y: -1\n          },\n          1: {\n              x: 1,\n              y: 0\n          },\n          2: {\n              x: 0,\n              y: 1\n          },\n          3: {\n              x: -1,\n              y: 0\n          }\n      }[a]\n  }\n  ;\n  GameManager.prototype.buildTraversals = function(a) {\n      for (var b = {\n          x: [],\n          y: []\n      }, c = 0; c < this.size; c++)\n          b.x.push(c),\n          b.y.push(c);\n      1 === a.x && (b.x = b.x.reverse());\n      1 === a.y && (b.y = b.y.reverse());\n      return b\n  }\n  ;\n  GameManager.prototype.findFarthestPosition = function(a, b) {\n      var c;\n      do\n          c = a,\n          a = {\n              x: c.x + b.x,\n              y: c.y + b.y\n          };\n      while (this.grid.withinBounds(a) && this.grid.cellAvailable(a));return {\n          farthest: c,\n          next: a\n      }\n  }\n  ;\n  GameManager.prototype.movesAvailable = function() {\n      return this.grid.cellsAvailable() || this.tileMatchesAvailable()\n  }\n  ;\n  GameManager.prototype.tileMatchesAvailable = function() {\n      for (var a, b = 0; b < this.size; b++)\n          for (var c = 0; c < this.size; c++)\n              if (a = this.grid.cellContent({\n                  x: b,\n                  y: c\n              }))\n                  for (var d = 0; 4 > d; d++) {\n                      var e = this.getVector(d);\n                      if ((e = this.grid.cellContent({\n                          x: b + e.x,\n                          y: c + e.y\n                      })) && e.value === a.value)\n                          return !0\n                  }\n      return !1\n  }\n  ;\n  GameManager.prototype.positionsEqual = function(a, b) {\n      return a.x === b.x && a.y === b.y\n  }\n  ;\n  window.requestAnimationFrame(function() {\n      new GameManager(4,KeyboardInputManager,HTMLActuator,LocalStorageManager)\n  });\n  \n});\n\n//# sourceURL=webpack://my-gulp/./src/js/script.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/js/script.js");
/******/ 	
/******/ })()
;